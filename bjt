02103
2018
一、
1、简述模块化程序设计的意义
	①模块化程序设计的基本思想是自顶向下、逐步分解、分而治之，即将一个较大的程序按照功能分割成一些小模块，各模块相对独立、功能单一、结构清晰、接口简单。
	②降低程序复杂度，使程序设计、调试和维护等操作简单化
	③提高代码的重用性
	④易于维护和功能扩充
	⑤有利于团队开发
2、简述黑箱测试和白箱测试的区别
	①黑箱测试也称功能测试和数据驱动测试，它是在已知产品所应具有的功能，通过测试来检测每个功能是否都能正常使用，在测试时，把程序看做一个不能打开的黑箱子，在完全不考虑程序内部结构和内部特性的情况下，测试者在程序接口进行测试，它只检查程序功能是否按照需求规格说明书的规定正常使用，程序是否能适当地接收输入数据而产生正确的输出信息，并且保持外部信息（如数据库或文件）的完整性。黑箱测试方法主要有等价类划分、边值分析、因-果图、错误推测等，主要用于软件确认测试。黑箱法着眼于程序外部结构、不考虑内部逻辑结构、针对软件界面和软件功能进行测试。黑箱法是穷举输入测试，只有把所有可能的输入都作为测试情况使用，才能以这种方法查出程序中所有的错误。实际上测试情况有无穷多个，人们不仅要测试所有合法的输入，而且还要对那些不合法但是可能的输入进行测试。
②白箱测试也称结构测试或逻辑驱动测试，它是知道产品内部工作过程，可通过测试来检测产品内部动作是否按照规格说明书的规定正常进行，按照程序内部的结构测试程序，检验程序中的每条通路是否都有能按预定要求正确工作，而不顾它的功能。白箱测试的主要方法有逻辑驱动、基路测试等，主要用于软件验证。白箱法全面了解程序内部逻辑结构，对所有逻辑路径进行测试。白箱法是穷举路径测试。在使用这一方案时，测试者必须检查程序的内部结构，从检查程序的逻辑着手，得出测试数据。
3、简述全局变量的优缺点，并说明在一个软件项目中，控制全局变量数目的一般策略
	全局变量优点：
①	全局可视，任何一个函数都可以访问和更改变量值。
②	内存地址固定，读写效率高
	全局变量缺点：
	①使用全局对象的函数依赖于全局对象的存在和类型，这使得在不同上下文环境中重用该函数更加困难。
	②如果程序必须被修改，则全局依赖增加了引入错误的可能性，而且即使支队局部修改也要求程序员必须理解整个程序。
③	如果全局对象得到一个不正确的值，则必须查找整个程序以判断错误发生的位置
④	当一个函数使用全局对象时，递归更加难以正确完成，递归在程序调用自身时才发生
	⑤在线程存在的情况下，我们必须做特殊的编码，以便同步各个线程对于全局对象的读和写操作。
4、说明传值机制和引用机制的意义和区别
	①传值机制中，被调函数的形式参数作为背调函数的局部变量处理，即在堆栈中开辟了内存空间以存放由主调函数放进来的实参的值，从而成为了实参的一个副本。值传递的特点是被调函数对形式参数的任何操作都是作为局部变量进行，不会影响主调函数的实参变量的值。
	②引用机制中，被调函数的形式参数虽然也作为局部变量在堆栈中开辟了内存空间，但是这时存放的是由主调函数放进来的实参变量的地址。被调函数对形参的任何操作都被处理成间接寻址，即通过堆栈中存放的地址访问主调函数中的实参变量。正是因为如此，被调函数对形参做的任何操作都影响了主调函数中的实参变量。
	区别：
	①所谓值传递，就是说仅将对象的值传递给目标对象，就相当于copy；系统将为目标对象重新开辟一个完全相同的内存空间。
	②所谓引用，就是说将对象在内存中的地址传递给目标对象，就相当于使目标对象和原始对象重新开辟一个完全相同的内存空间。此时，如果对目标对象进行修改，内存中的数据也会改变。
5、面向过程和面向对象编程的区别
	①面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。
	②面向对象是把构成问题事务分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描述某个事物在整个解决问题的步骤中的行为。
	③总的来说，面向对象就是高度实物抽象化，而面向过程就是自顶向下的编程。
6、简述对象和类之间的关系
	①类是对象，事物的描述和抽象，是具有相同属性和行为的对象的集合，而对象是类的具体实例。
	②类是抽象的，不占用内存，而对象是具体的，占用内存空间。类：具有相同属性和行为的一组对象的集合；对象：是具体存在的事物，明确定义状态和行为。
	③类是用于创建对象的蓝图，它是一个定义包括在特定类型的对象中的方法和变量的软件模板。
7、在人类自然语言中，一个动词常具有不同的含义，在面向对象程序设计语言中，也可以表达这种现象。请指出面向对象程序设计中表达这种现象的两种常用方式
	①多态：在面向对象语言中，接口的多种不同实现方式即为多态，同一操作作用于不同的对象，可以有不同的解释，产生不同的执行结果。在运行时，可以通过指向基类的指针，来调用实现派生类中的方法。把不同的子类对象都当做父类来看，可以屏蔽不同子类对象之间的差异，写出通用的代码，做出通用的编程，以适应需求的不断变化。赋值之后，父类型的引用就可以根据当前赋值给它的子对象的特性以不同的方式运作。
	②重载：重载是在同一个类中的两个或两个以上的方法，拥有相同的方法名,但是参数却不相同，方法体也不相同，就是在类中可以创建多个方法，它们具有相同的名字，但具有不同的参数和不同的定义，调用方法时通过传递给它们的不同参数个数和参数类型来决定具体使用哪个方法。
8、简述你对软件通用性的理解，哪些手段可以提高通用性。


9、简述内存的动态分配和静态分配的区别
	①时间不同。静态分配发生在程序编译和连接的时候，动态分配则发生在程序调入和执行的时候。
	②空间不同。堆都是动态分配的，没有静态分配的堆。栈有两种分配方式：静态分配和动态分配。静态分配是编译器完成的，比如局部变量的分配。动态分配由函数malloc进行分配。不过栈的动态分配和堆不同，他的动态分配是由编译器进行释放，无需我们手工实现。
	③静态内存分配因为是发生在程序编译和连接的时候，所以需要预先设置存储空间的大小，而所谓动态内存分配就是指在程序执行的过程中动态地分配或者回收存储空间的分配内存的方法。动态内存分配不像数组等静态内存分配方法那样需要预先分配存储空间，而是由系统根据程序的需要即时分配，且分配的大小就是程序要求的大小。
10、列举三种排序方法，并简要比较他们的优缺点和时间复杂度
	①冒泡排序：优点：简单、稳定、占用空间少
				缺点：慢、每次只能移动相邻两个数据
				时间复杂度为O(n²)
	②插入排序：优点：稳定、在基本有序的情况下快、占用空间少
				缺点：比较次数不一定，比较次数越少，插入点后的数据移动越多，特别是当数据总量庞大的时候，但用链表可以解决这个问题
				时间复杂度为O(n²)
	③快速排序：优点：极快，数据移动少
				缺点：不稳定
				时间复杂度为O(nlogn)
二、
1、设计一个程序流程图，判断输入年份是否为闰年，直到输入0退出循环
2、画类图
3、定义一个栈，实现对象初始化和入栈操作

2019（1）
1、	C和C++有什么不同
从机制上：C是面向过程的（但C也可以编写面向对象的程序）；C++是面向对象的，提供了类。但是，C++编写面向对象的程序比C容易。
从适用的方向：C适合要求代码体积小的，效率高的场合，如嵌入式；C++适合更上层的，复杂的；Linux核心大部分是C写的，因为它是系统软件，效率要求极高。
从名称上也可以看出，C++比C多了+，说明C++是C的超集；那为什么不叫C+而叫C++呢，是因为C++比C来说扩充的东西太多了，所以就在C后面放上两个+；于是就成了C++。
C语言是结构化编程语言，C++是面向对象编程语言。C++侧重于对象而不是过程，侧重于类的设计而不是逻辑的设计。
2、	为什么要用多态，多态有什么好处
我们知道，封装可以隐藏实现细节，使得代码模块化；继承可以扩展已存在的代码模块（类）；它们的目的都是为了-代码重用。而多态除了代码的复用性外，还可以解决项目中紧耦合的问题，提高程序的可扩展性。耦合度讲的是模块模块之间，代码代码之间的关联度，通过对系统的分析把他分解成一个一个子模块，子模块提供稳定的接口，达到降低系统耦合度的目的，模块模块之间尽量使用模块接口访问，而不是随意引用其他模块的成员变量。
好处：
①	应用程序不必为每一个派生类编写功能调用，只需要对抽象基类进行处理即可。大大提高程序的可复用性
②	派生类的功能可以被基类的方法或引用变量所调用，这叫向后兼容，可以提高可扩充性和可维护性。
3、	C++函数中值的传递方式有哪几种
C++函数的三种传递方式为：值传递、指针传递和引用传递。
4、	指针和引用作为函数参数进行传递时的区别
①	指针作为参数进行传递：
用指针传递参数，可以实现对实参改变的目的，是因为传递过来的是实参的地址，因此使用*a
实际上是取存储实参的内存单元里的数据，即是对实参进行改变，因此可以达到目的。
②	将引用作为函数的参数进行传递
在讲引用作为函数参数进行传递时，实质上传递的是实参本身，即传递进来的不是实参的一个拷贝，因此对形参的修改其实是对实参的修改，所以在用引用进行参数传递时，不仅节约时间，而且可以节约时间，引用进行参数传递时，事实上传递的是实参本身，而不是拷贝，所以在上述要达到同时修改指针的目的的话，就得使用引用了。

5、	将“引用”作为函数参数有哪些特点
①	传递引用给函数与传递指针的效果是一样的。这是，被调函数的形参就成为·原来主调函数中得实参变量或对象的一个别名来使用，所以在背调函数中对形参变量的操作就是对其相应的目标对象（在主调函数中）的操作。
②	使用引用传递函数的参数，在内存中并没有产生实参的副本，它是直接对实参操作；而使用一般变量传递函数的参数，当发生函数调用时，需要给形参分配存储单元，形参变量使实参变量的副本；如果传递的是对象，还将调用拷贝构造函数。因此，当参数传递的数据较大时，用引用比用一般变量传递参数的效率和所占空间都好。
③	使用指针作为函数的参数虽然也能达到与使用引用的效果，但是，在被调用函数中同样要给形参分配存储单元，且需要重复使用“*指针变量名”的形式进行运算，这很容易产生错误且程序的阅读性较差；另一方面，在主调函数的调用点处，必须用变量的地址作为实参，而引用更容易使用，更清晰。
6、	全局变量和局部变量有什么区别，是怎么实现的，操作系统和编译器是怎么知道的
生命周期不同：
全局变量随主程序创建而创建，随主程序销毁而销毁
局部变量在局部函数内部，甚至局部循环体等内部存在，退出就不存在；内存中分配在全局数据区。
使用方式不同：
通过声明后全局变量程序的各个部分都可以用到；局部变量只能在局部使用；分配在栈区，操作系统和编译器通过内存分配的位置来知道的，全局变量分配在全局数据段并且在程序开始运行的时候被加载，局部变量则分配在堆栈里面。
7、	简述Heap与Stack的差别
Heap是堆，stack是栈。Stack的空间由操作系统自动分配/释放，Heap上的空间手动分配/释放。
Stack空间有限，Heap是很大的自由存储区C中的malloc函数分配的内存空间即在堆上，C++中对相应的是new操作符。
程序在编译期堆变量和函数分配内存都在栈上进行，且程序运行过程中函数调用时参数的传递也在栈上进行。
8、	面向对象的三个基本特征，并简单叙述
①	封装：将客观事物抽象成类，每个类对自身的数据和方法实行
②	继承：广义的继承有三种实现形式：
实现继承（指使用基类的属性和方法而无需额外编码的能力）
可视继承（子窗体使用父窗体的外观和实现代码）
接口继承（仅使用属性和方法，实现滞后的、到子类实现）
前两种（类继承）和后一种（对象组合->接口继承以及纯虚数）构成了功能复用的两种方式。
③	多态：是将父对象设置成为和一个或更多的与他的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特向以不同的方式运作。
简单地说，就是一句话：允许将子类类型的指针赋值给父类类型的指针。
9、	软件复用的范围不仅仅涉及源程序代码，请至少列出5种可能复用的软件元素
可复用的软件元素包括（选5种）：项目计划、成本估计、体系结构、需求模型和规格说明、设计、用户文档和技术文档、用户界面、数据结构、测试用例。
10、举出三种查找方法，并简要介绍
	二分：要求待查找序列是排完序的，即是有序的序列。
	哈希：能够比较好的解决为止冲突的情况下哈希查找都是比较快速的。主要是hash函数的选择。
	二叉排序树：如果树比较平衡的情况下，这种查找的复杂度是log(n)，但是如果很偏，比如一直都只插入左孩子节点（这样就和链表一样了），这种情况就比较糟糕了。
二、
1、N-S图、用例图、快排算法

